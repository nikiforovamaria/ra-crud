{"version":3,"sources":["components/NewNoteForm.js","components/ItemNote.js","components/BoardNotes.js","App.js","reportWebVitals.js","index.js"],"names":["FormAddClock","props","useState","text","form","setForm","name","onChange","evt","target","value","prevForm","className","onClick","preventDefault","newNote","onFormSubmit","ItemNote","note","id","onDelete","BoardNotes","handleDelete","fetch","URL","method","then","getNotes","handleSbmit","headers","body","JSON","stringify","response","json","result","setState","notes","state","Fragment","this","map","item","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGe,SAASA,EAAaC,GACnC,MAAwBC,mBAAS,CAC/BC,KAAM,KADR,mBAAOC,EAAP,KAAaC,EAAb,KAyBA,OACE,iCACE,6CACA,0BAAUC,KAAK,OAAOC,SAxBL,SAACC,GACpB,MAAwBA,EAAIC,OAApBH,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MACdL,GAAQ,SAACM,GAAD,mBAAC,eAAmBA,GAApB,kBAA+BL,EAAOI,QAsBEA,MAAON,EAAKD,OAC1D,qBAAKS,UAAU,sBAAsBC,QApBpB,SAACL,GAGpB,GAFAA,EAAIM,iBAEc,KAAdV,EAAKD,KAAa,CACpB,IAAMY,EAAU,CAEdZ,KAAMC,EAAKD,MAGbF,EAAMe,aAAaD,GACnBV,EAAQ,CACNF,KAAM,OASR,qBC9BS,SAASc,EAAShB,GAC/B,IAAQiB,EAASjB,EAATiB,KAMR,OACE,sBAAKN,UAAU,kBAAf,UACE,4BAAIM,EAAKf,OACT,qBAAKS,UAAU,wBAAwBC,QAAU,WAPhC,IAACM,IAOoDD,EAAKC,GAN7ElB,EAAMmB,SAASD,IAMb,sB,ICReE,E,kDACnB,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAsBRqB,aAAe,SAACH,GACdI,MAAM,GAAD,OAAI,EAAKC,IAAT,YAAgBL,GAAM,CACzBM,OAAQ,WAEPC,MAAK,kBAAM,EAAKC,eA3BF,EA8BnBC,YAAc,SAACb,GACbQ,MAAM,EAAKC,IAAK,CACdC,OAAQ,OACRI,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUjB,KAEpBW,MAAK,kBAAM,EAAKC,eAtCF,EAyCnBA,SAAW,WACTJ,MAAM,EAAKC,KACRE,MAAK,SAACO,GAAD,OAAcA,EAASC,UAC5BR,MAAK,SAACS,GACL,EAAKC,SAAS,CAAEC,MAAOF,QA3C3B,EAAKG,MAAQ,CACXD,MAAO,IAGT,EAAKb,IAAM,2CANM,E,0CASnB,WAAU,IAAD,OACP,OACE,eAAC,IAAMe,SAAP,WACE,wCAAU,sBAAM3B,UAAU,yBAAyBC,QAAS2B,KAAKb,WAAvD,0BACV,qBAAKf,UAAU,aAAf,SACG4B,KAAKF,MAAMD,MAAMI,KAAI,SAACC,GAAD,OACpB,cAACzB,EAAD,CAAwBC,KAAMwB,EAAMtB,SAAU,EAAKE,cAApCoB,EAAKvB,SAGxB,cAAC,EAAD,CAAaH,aAAcwB,KAAKZ,mB,+BA+BtC,WACEY,KAAKb,e,GAnD+BgB,aCDzB,SAASC,IACtB,OACE,qBAAKhC,UAAU,YAAf,SACE,cAAC,EAAD,MCPN,IAYeiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e4a17907.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FormAddClock(props) {\r\n  const [form, setForm] = useState({\r\n    text: '',\r\n  });\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n    setForm((prevForm) => ({ ...prevForm, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (form.text !== '') {\r\n      const newNote = {\r\n        // id: shortid.generate(),\r\n        text: form.text,\r\n      };\r\n\r\n      props.onFormSubmit(newNote);\r\n      setForm({\r\n        text: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>New Note</label>\r\n      <textarea name='text' onChange={handleChange} value={form.text} />\r\n      <div className=\"material-icons send\" onClick={handleSubmit}>send</div>\r\n    </form>\r\n  );\r\n}\r\n\r\nFormAddClock.propTypes = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ItemNote(props) {\r\n  const { note } = props;\r\n\r\n  const handleDelete = (id) => {\r\n    props.onDelete(id);\r\n  };\r\n\r\n  return (\r\n    <div className='block-item-note'>\r\n      <p>{note.text}</p>\r\n      <div className='material-icons delete' onClick={ () => { handleDelete(note.id); } }>clear</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nItemNote.propTypes = {\r\n  note: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport NewNoteForm from './NewNoteForm.js';\r\nimport ItemNote from './ItemNote.js';\r\n\r\nexport default class BoardNotes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notes: [],\r\n    };\r\n    // this.URL = 'http://localhost:7777/notes';\r\n    this.URL = 'https://ra-crud-back.herokuapp.com/notes';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Notes <span className='material-icons refresh' onClick={this.getNotes()}>autorenew</span></h2>\r\n        <div className='list-notes'>\r\n          {this.state.notes.map((item) => (\r\n            <ItemNote key={item.id} note={item} onDelete={this.handleDelete} />\r\n          ))}\r\n        </div>\r\n        <NewNoteForm onFormSubmit={this.handleSbmit} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    fetch(`${this.URL}/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then(() => this.getNotes());\r\n  }\r\n\r\n  handleSbmit = (newNote) => {\r\n    fetch(this.URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(newNote),\r\n    })\r\n      .then(() => this.getNotes());\r\n  }\r\n\r\n  getNotes = () => {\r\n    fetch(this.URL)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        this.setState({ notes: result });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNotes();\r\n  }\r\n}\r\n\r\n// Notes.propTypes = {\r\n//   clocksSetup: PropTypes.object.isRequired,\r\n//   onClose: PropTypes.func.isRequired,\r\n// };\r\n","import React from 'react';\nimport './App.css';\nimport BoardNotes from './components/BoardNotes.js';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <BoardNotes />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}